version: '3.8'
services:
  db:
    container_name: db
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    healthcheck:
        test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
        interval: 10s
        timeout: 5s
        retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  web:
    container_name: web
    build:
      context: ./srcs
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - app_django:/app/django
      - staticfiles:/var/www/static/
      - mediafiles:/var/www/media/
    env_file:
      - .env

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: on-failure
    depends_on:
      - web
    ports:
      - "8000:8000"
    volumes:
      - ./srcs/tools/ssl/transcendance.crt:/etc/nginx/ssl/transcendance.crt
      - ./srcs/tools/ssl/transcendance.key:/etc/nginx/ssl/transcendance.key
      - ./srcs/tools/nginx.conf:/etc/nginx/nginx.conf
      - staticfiles:/var/www/static/
      - mediafiles:/var/www/media/
    env_file:
      - .env

volumes:
  app_django:
    driver: local
    driver_opts:
      type: none
      device: ./srcs/app
      o: bind
  staticfiles:
    driver: local
  mediafiles:
    driver: local
  db_data:
    driver: local
  
